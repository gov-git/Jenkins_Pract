# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

stages:
  - stage: "Build"
    displayName: Build
    pool:
      vmImage: "windows-latest"
    variables:
      BiuldConfiguration: Release
      BiuldPlatform: "any cpu"
      slnfilepath: democodepush/democodepush.sln
    jobs:
      - job: 
        steps:
          - task: NuGetToolInstaller@0
            displayName: 'Use NuGet 4.4.1'
            inputs:
              versionSpec: 4.4.1
          - task: NuGetCommand@2
            displayName: ".Net Restoration"
            inputs:
              command: 'restore'
              restoreSolution: '**/*.sln'
              feedsToUse: 'select'
          
          - task: VSBuild@1
            displayName: "Visual-Studio Biuld"
            inputs:
              solution: '**\*.sln'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
              platform: '$(BuildPlatform)'
              configuration: '$(BuildConfiguration)'
          
          - task: VSTest@3
            displayName: "Test Assembly"
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*test*.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(System.DefaultWorkingDirectory)'
              
          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact"
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: "Dev"
    displayName: DEV
    pool:
      vmImage: "windows-latest"
    variables:
      - group: "Development"
    jobs:
      - deployment: 
        displayName: "Development"
        environment: "Development"
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - task: DownloadBuildArtifacts@1
                  displayName: "Download Artificates"
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - task: AzureKeyVault@2
                  displayName: "Connecting to Azure Key_Vault"
                  inputs:
                    KeyVaultName: 
                    SecretsFilter: '*'
                    RunAsPreJob: false

                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: "ARM Template deployment"
                  inputs:
                    deploymentScope: 'Resource Group'
                    action: 'Create Or Update Resource Group'
                    resourceGroupName: 'Yaml-rg'
                    templateLocation: 'Linked artifact'
                    deploymentMode: 'Incremental'
                    
                - task: AzureWebApp@1
                  displayName: "Azure Web-App Deployment"
                  inputs:
                    appType: 'webApp'
                    appName: 
                    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
                    deploymentMethod: 'auto'

  - stage: "QA"
    dependsOn: "Dev"
    displayName: "QA"
    pool:
      vmImage: "windows-latest"
    variables:
      - group: "qa"
    jobs:
      - deployment: 
        displayName: "QA"
        environment: "qa"
        strategy:
          runOnce:
            deploy:
              steps:
                - download: none
                - task: DownloadBuildArtifacts@1
                  displayName: "Download Artificates"
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - task: AzureKeyVault@2
                  displayName: "Azure_Key Vault"
                  inputs:
                    KeyVaultName: 
                    SecretsFilter: '*'
                    RunAsPreJob: false

                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: "ARM Template Deployment"
                  inputs:
                    deploymentScope: 'Resource Group'
                    action: 'Create Or Update Resource Group'
                    templateLocation: 'Linked artifact'
                    deploymentMode: 'Incremental'

                - task: AzureRmWebAppDeployment@4
                  displayName: "Web App Deployment"
                  inputs:
                    ConnectionType: 'AzureRM'
                    appType: 'webApp'
                    WebAppName: 
                    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

  - stage: "Prod"
    dependsOn: "QA"
    displayName: "Prod"
    pool:
      vmImage: "windows-latest"
    variables:
      - group: "Prod"
    jobs:
      - deployment: 
        displayName: "Prod"
        environment: "Prod"
        strategy:
         runOnce:
           deploy:
             steps:
                - download: none
                - task: DownloadBuildArtifacts@1
                  displayName: "Download Artificates"
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - task: AzureKeyVault@2
                  displayName: "Azure_Key Vault"
                  inputs:
                    KeyVaultName: 
                    SecretsFilter: '*'
                    RunAsPreJob: false
 
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: "ARM Template Deployment"
                  inputs:
                    deploymentScope: 'Resource Group'
                    action: 'Create Or Update Resource Group'
                    templateLocation: 'Linked artifact'
                    deploymentMode: 'Incremental'

                - task: AzureRmWebAppDeployment@4
                  displayName: "Web App Deployment"
                  inputs:
                    ConnectionType: 'AzureRM'
                    appType: 'webApp'
                    WebAppName: 
                    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'